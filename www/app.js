"use strict";(()=>{async function p(t){let o=new RTCPeerConnection,s=document.createElement("audio");s.autoplay=!0,o.ontrack=n=>s.srcObject=n.streams[0];let e=(await navigator.mediaDevices.getUserMedia({audio:!0})).getTracks()[0];o.addTrack(e),e.enabled=!1;let i=o.createDataChannel("oai-events"),a=new Map;i.addEventListener("message",n=>{let r=n.data;console.log("Received event:",r),a.forEach(m=>{m(r)})});let c=await o.createOffer();await o.setLocalDescription(c);let l={type:"answer",sdp:await(await fetch("https://api.openai.com/v1/realtime?model=gpt-4o-realtime-preview-2025-06-03",{method:"POST",body:c.sdp,headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/sdp"}})).text()};return await o.setRemoteDescription(l),{close:()=>{console.log("Closing WebRTC connection"),e&&e.stop(),i&&i.close(),o&&o.close()},get volume(){return s.volume},set volume(n){s.volume=Math.max(0,Math.min(1,n))},get audioMuted(){return s.muted},set audioMuted(n){s.muted=n},get micMuted(){return!e.enabled},set micMuted(n){e.enabled=!n},send:n=>{console.log("Sending event:",n),i.send(JSON.stringify(n))},addEventListener:(n,r)=>{a.set(n,r)},removeEventListener:n=>{a.delete(n)},getAudioElement:()=>s,getPeerConnection:()=>o,getDataChannel:()=>i,getMicrophoneTrack:()=>e}}var d=new Shiny.OutputBinding;$.extend(d,{find:function(t){return $(t).find(".shinyrealtime")},renderValue:function(t,o){let s=this.getId(t),u=p(o).then(e=>($(document).on("shiny:disconnected",function(){console.log("Shiny disconnected, cleaning up any WebRTC connections"),e.close()}),$(t).find(".btn-unmute").show(),$(t).on("click",".btn-mute",()=>{e.micMuted=!0,$(t).find(".btn-mute").hide(),$(t).find(".btn-unmute").show()}),$(t).on("click",".btn-unmute",()=>{e.micMuted=!1,$(t).find(".btn-unmute").hide(),$(t).find(".btn-mute").show()}),$(t).data("rtConnection",e),e.addEventListener("shiny",i=>{Shiny.setInputValue(s+"_event",i,{priority:"event"})}),Shiny.addCustomMessageHandler("realtime_send",i=>{Array.isArray(i)?i.forEach(a=>e.send(a)):e.send(i)}),e))},unsubscribe:function(t){let o=$(t).data("rtConnection");o&&typeof o.close=="function"&&(console.log("Closing WebRTC connection due to element unsubscribe"),o.close())}});Shiny.outputBindings.register(d,"realtime-output");})();
//# sourceMappingURL=app.js.map
