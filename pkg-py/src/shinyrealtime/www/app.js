"use strict";(()=>{var r=class{constructor(e,t,i,a){this.audioEl=e,this.pc=t,this.dc=i,this.micTrack=a,this.eventListeners=new Map,this.dc.addEventListener("message",s=>{let n=s.data;console.log("Received event:",n),this.eventListeners.forEach(u=>{u(n)})})}close(){console.log("Closing WebRTC connection"),this.micTrack&&this.micTrack.stop(),this.dc&&this.dc.close(),this.pc&&this.pc.close()}get volume(){return this.audioEl.volume}set volume(e){this.audioEl.volume=Math.max(0,Math.min(1,e))}get audioMuted(){return this.audioEl.muted}set audioMuted(e){this.audioEl.muted=e}get micMuted(){return!this.micTrack.enabled}set micMuted(e){this.micTrack.enabled=!e}send(e){console.log("Sending event:",e),this.dc.send(JSON.stringify(e))}addEventListener(e,t){this.eventListeners.set(e,t)}removeEventListener(e){this.eventListeners.delete(e)}getAudioElement(){return this.audioEl}getPeerConnection(){return this.pc}getDataChannel(){return this.dc}getMicrophoneTrack(){return this.micTrack}};var l=class l{constructor(e,t){this.onMuteChange=t;this.muted=!0;this.holdTimeout=null;this.pushToTalkActive=!1;this.suppressNextClick=!1;this.element=e,this.element.addEventListener("mousedown",()=>this.startPress()),this.element.addEventListener("touchstart",()=>this.startPress()),this.element.ownerDocument.addEventListener("keydown",i=>{i.key===" "&&!i.repeat&&(i.preventDefault(),this.startPress())}),this.element.addEventListener("mouseup",()=>this.endPress()),this.element.addEventListener("touchend",()=>this.endPress()),this.element.ownerDocument.addEventListener("keyup",i=>{i.key===" "&&this.endPress()}),this.element.addEventListener("click",i=>this.onClick(i))}isMuted(){return this.muted}isPushToTalkActive(){return this.pushToTalkActive}setMuted(e){this.muted!==e&&(this.muted=e,this.onMuteChange(e))}startPushToTalk(){this.pushToTalkActive=!0,this.setMuted(!1)}stopPushToTalk(){this.pushToTalkActive&&(this.pushToTalkActive=!1,this.setMuted(!0))}toggle(){this.setMuted(!this.muted)}startPress(){this.holdTimeout=window.setTimeout(()=>{this.startPushToTalk(),this.holdTimeout=null},l.HOLD_DELAY)}endPress(){this.suppressNextClick=!0,window.setTimeout(()=>{this.suppressNextClick=!1},0),this.holdTimeout?(clearTimeout(this.holdTimeout),this.holdTimeout=null,this.toggle()):this.stopPushToTalk()}onClick(e){if(this.suppressNextClick){e.preventDefault(),e.stopImmediatePropagation();return}this.toggle()}};l.HOLD_DELAY=200;var c=l;async function T(d){let e=new RTCPeerConnection,t=document.createElement("audio");t.autoplay=!0,e.ontrack=v=>t.srcObject=v.streams[0];let a=(await navigator.mediaDevices.getUserMedia({audio:!0})).getTracks()[0];e.addTrack(a),a.enabled=!1;let s=e.createDataChannel("oai-events"),n=await e.createOffer();await e.setLocalDescription(n);let p={type:"answer",sdp:await(await fetch("https://api.openai.com/v1/realtime/calls?model=gpt-realtime",{method:"POST",body:n.sdp,headers:{Authorization:`Bearer ${d}`,"Content-Type":"application/sdp"}})).text()};return await e.setRemoteDescription(p),new r(t,e,s,a)}var h=class extends Shiny.OutputBinding{find(e){return $(e).find(".shinyrealtime")}renderValue(e,t){let i=this.getId(e),a=T(t).then(s=>{$(document).on("shiny:disconnected",function(){console.log("Shiny disconnected, cleaning up any WebRTC connections"),s.close()});let n=e.querySelector(".mic-toggle-btn"),u=new c(n,o=>{s.micMuted=o,o?(n.classList.remove("active","btn-danger"),n.classList.add("btn-secondary")):(n.classList.remove("btn-secondary"),n.classList.add("active","btn-danger"))});return $(e).data("rtConnection",s),s.addEventListener("shiny",o=>{Shiny.setInputValue(i+"_event",o,{priority:"event"})}),Shiny.addCustomMessageHandler("realtime_send",o=>{Array.isArray(o)?o.forEach(m=>s.send(m)):s.send(o)}),s})}unsubscribe(e){let t=$(e).data("rtConnection");t&&typeof t.close=="function"&&(console.log("Closing WebRTC connection due to element unsubscribe"),t.close())}};Shiny.outputBindings.register(new h,"realtime-output");})();
//# sourceMappingURL=app.js.map
